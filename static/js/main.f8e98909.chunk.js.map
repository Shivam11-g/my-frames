{"version":3,"sources":["s.jpg","admin.js","frameCard.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Admin","Image","useState","state","setState","className","onSubmit","e","preventDefault","formData","brand","target","value","image","frameType","frameShape","bought","wishlisted","rating","parseFloat","gender","color","width","newPrice","oldPrice","axios","post","then","res","alert","catch","err","console","log","htmlFor","type","name","onChange","file","files","reader","FileReader","readAsDataURL","onload","result","change","step","min","max","Card","props","id","style","left","position","height","viewBox","fill","xmlns","fillRule","d","src","alt","marginBottom","fontSize","fontWeight","float","borderRadius","backgroundColor","padding","paddingRight","App","Data","setData","New","setNew","Full","setFull","Half","setHalf","Rimless","setRimless","Rect","setRect","Round","setRound","Cat","setCat","Sqr","setSqr","to","path","component","parsed","location","search","handelSubmit","url","fetch","data","json","data-toggle","onClick","event","top","right","map","val","index","available","addedOn","saving","_saving","key","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f8e98909.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/s.c72ee525.jpg\";","import React, { useState } from 'react';\r\nimport axios, {post } from 'axios'\r\n\r\nfunction Admin() {\r\n\r\n    const [state, setState] = useState('');\r\n    var Image\r\n    \r\n    const change=(e)=>{\r\n        let file = e.target.files\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file[0]);\r\n        \r\n        reader.onload=(e)=>{\r\n            Image = e.target.result;\r\n            \r\n        }\r\n    }\r\n\r\n    const trriger=(e)=>{\r\n        e.preventDefault();\r\n        setState('Loading...')\r\n        \r\n        let brand = e.target.brand.value\r\n        let image = Image\r\n        let frameType = e.target.frameType.value\r\n        let frameShape = e.target.frameShape.value;\r\n        let bought = e.target.bought.value;\r\n        let wishlisted = e.target.wishlisted.value;\r\n        let rating = parseFloat(e.target.rating.value)\r\n        let gender = e.target.gender.value;\r\n        let color = e.target.color.value;\r\n        let width = e.target.width.value;\r\n        let newPrice = e.target.newPrice.value\r\n        let oldPrice = e.target.oldPrice.value\r\n        \r\n        // console.log(rating);\r\n        \r\n\r\n        const url = 'https://my-frames.herokuapp.com/frame?'\r\n        const formData = { brand, image, frameType, frameShape, bought, wishlisted, rating, gender, color, width, newPrice, oldPrice}\r\n        // console.log(formData);\r\n        \r\n         return axios.post(url, formData).then((res) => {\r\n            setState('Successful')\r\n            alert('Submited')\r\n        }).catch((err) => console.log(err))        \r\n        \r\n    }\r\n\r\n    return (\r\n      <div className=\"container mt-3\">\r\n        <h3 className=\"my-4\">Admin Page</h3>\r\n        <form onSubmit={trriger}>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input type=\"text\" className=\"form-control\" name=\"brand\" />\r\n            </div>\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"img\">Image</label>\r\n              <input\r\n                type=\"file\"\r\n                className=\"form-control btn-secondary\"\r\n                name=\"img\"\r\n                onChange={(e) => change(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"frameType\">Frame Type</label>\r\n              <input type=\"text\" className=\"form-control\" name=\"frameType\" />\r\n            </div>\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"frameShape\">Frame Shape</label>\r\n              <input type=\"text\" className=\"form-control\" name=\"frameShape\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"wishlisted\">Wishlisted</label>\r\n              <input type=\"number\" className=\"form-control\" name=\"wishlisted\" />\r\n            </div>\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"bought\">No. of Purchases</label>\r\n              <input type=\"number\" className=\"form-control\" name=\"bought\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"gender\">For Gender</label>\r\n              <input type=\"text\" className=\"form-control\" name=\"gender\" />\r\n            </div>\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"color\">Color</label>\r\n              <input type=\"text\" className=\"form-control\" name=\"color\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"rating\">\r\n                Star Rating (enter float value between 0 and 5)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.1\"\r\n                min=\"0\"\r\n                max=\"5\"\r\n                className=\"form-control\"\r\n                name=\"rating\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"width\">Width in 'mm'</label>\r\n              <input type=\"number\" className=\"form-control\" name=\"width\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"newPrice\">New Price</label>\r\n              <input type=\"number\" className=\"form-control\" name=\"newPrice\" />\r\n            </div>\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"oldPrice\">Old Price</label>\r\n              <input type=\"number\" className=\"form-control\" name=\"oldPrice\" />\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary px-4\">\r\n            {\" \"}\r\n            Submit{\" \"}\r\n          </button><p>{state}</p>\r\n        </form>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Admin","import React from 'react';\r\nimport img from './s.jpg'\r\nfunction Card (props) {\r\n\r\n    \r\n\r\n    return(\r\n<div id=\"frame-card\" className=\"card m-1 my-3 py-2\" style={{width: '22rem'}}>\r\n  <span style={{left: 280, position: 'relative'}}>{props.wishlisted} <svg width=\"1.4em\" height=\"1.4em\" viewBox=\"0 0 16 16\" className=\"bi bi-heart\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path fillRule=\"evenodd\" d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\" />\r\n    </svg></span>\r\n  <img src={props.image} className=\"card-img-top img-responsive\" alt=\"img\"  />\r\n  <div className=\"card-body\" style={{marginBottom: '-40px'}}>\r\n    <p style={{fontSize: 11}}>\r\n      <span style={{fontWeight: 'bold'}}>{props.brand}</span> <span style={{float: 'right'}}>Color: {props.color}</span></p><p style={{fontSize: 12}}>{\"\\n\"}</p>\r\n    \r\n    \r\n    <span style={{borderRadius: 10, backgroundColor: 'dodgerblue', color: 'white', padding: 2, paddingRight: 2, fontSize: 12}}>{props.rating} <svg width=\".8em\" height=\".8em\" viewBox=\"0 0 16 16\" className=\"bi bi-star-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\r\n      </svg></span><span className=\"text-muted\" style={{fontSize: 12}}>|{props.bought} bought</span> <span style={{fontSize: 12, float: 'right'}}>Frame Type: {props.frameType}</span>\r\n    <p style={{fontSize: 12}}>{\"\\n\"}</p>\r\n\r\n    <span style={{fontSize: 12}}>Rs {props.newPrice} </span><del style={{fontSize: 12}} className=\"text-muted\">{props.oldPrice}</del>\r\n    <span style={{fontSize: 12, float: 'right'}}>Frame Shape: {props.frameShape}</span>\r\n    <p>\r\n    </p></div>\r\n</div>\r\n\r\n\r\n// <div className=\"card m-4 p-2\" style={{width: '21rem'}}>\r\n//   <img src={img} className=\"card-img-top img-responsive\" alt=\"img\" style={{width: '19rem'}} />\r\n//   <div className=\"card-body\">\r\n//     <p className=\"card-text\">\r\n//         Some quick example text to build on the card title and make up the bulk of the card's content.\r\n//     </p>\r\n//   </div>\r\n// </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Card;","import React, {useState} from 'react';\nimport { useLocation, Route } from 'react-router';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport Admin from './admin'\nimport Card from './frameCard'\n\n\n\nfunction App() {\n\n  const [Data, setData] = useState([]);\n  const [New, setNew] = useState('');\n  const [state, setState] = useState('');\n  \n  const [Full, setFull] = useState('');\n  const [Half, setHalf] = useState('');\n  const [Rimless, setRimless] = useState('');\n  \n  const [Rect, setRect] = useState('');\n  const [Round, setRound] = useState('');\n  const [Cat, setCat] = useState('');\n  const [Sqr, setSqr] = useState('');\n// const queryString = require('query-string');\n// var parsed = queryString.parse(this.props.location.search);\n// console.log(parsed.param); // replace param with your own \n\n\n//   const url = new URLSearchParams(useLocation().search)\n//   console.log(url);\n  \n  return (\n    <BrowserRouter>\n      <div>\n        <center><Link to='/list' >List</Link>  <Link className='ml-5 ' to='/admin'>Admin</Link></center>\n        <Route path='/list' component={List}></Route>\n        <Route path='/admin' component={Admin}></Route>\n      </div>\n    </BrowserRouter>\n  );\n\n\n\n\nfunction List(props) {\n\n\n    const parsed = props.location.search;\n    console.log(props.location.search); // replace param with your own \n\n    const handelSubmit = (e) => {\n      e.preventDefault()\n      setState('loading...')\n\n        const url = 'https://my-frames.herokuapp.com/frame?' + New + parsed + Full + Half + Rimless + Sqr + Rect + Round + Cat;\n        console.log(url);\n        setFull('')\n        setHalf('')\n        setRimless('')\n        setNew('')\n        setSqr('')\n        setRound('')\n        setCat('')\n        setRect('')\n        \n        fetch(url)\n            .then(function (data) {\n                return data.json();\n            })\n            .then((json) => {     \n                setState('')           \n                setData(json);\n            });\n    }\n\n    return ( \n    <div>\n\n      <form id=\"search\"  onSubmit={handelSubmit}>\n        <div className=\"dropdown  m-1 \" >\n          <button className=\"btn btn-secondary dropdown-toggle px-4\" type=\"button\" data-toggle=\"dropdown\">Sort\n            <span className=\"caret\" /></button>\n          <ul className=\"dropdown-menu\">\n            <li><a onClick={event => setNew('&price=1')}>Price: Low to High</a></li>\n            <li><a onClick={event => setNew('&price=-1')}>Price: High to Low</a></li>\n            <li><a onClick={event => setNew('&addedOn=true')}>New Arrival</a></li>\n            <li><a onClick={event => setNew('&bought=true')}>Bestseller</a></li>\n            <li><a onClick={event => setNew('&saving=true')}>Biggest Saving</a></li>\n          </ul>\n        </div>\n\n      <span style={{float:'right', position:'relative', top:\"-30px\", right:\"120px\", fontWeight:'bold'}}>Filter</span>\n\n       <div className=\"mx-3\" style={{float:'right'}}>Frame Type\n          <div className=\"form-check \">\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" onClick={event => setFull('&frameType=Full Rim')} />\n            <label className=\"form-check-label\" htmlFor=\"inlineCheckbox1\" >Full Rim</label>\n          </div>\n          <div className=\"form-check \">\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" onClick={event => setHalf('&frameType=Half Rim')} />\n            <label className=\"form-check-label\" htmlFor=\"inlineCheckbox2\">Half Rim</label>\n          </div>\n          <div className=\"form-check \">\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" onClick={event => setRimless('&frameType=Rimless')} />\n            <label className=\"form-check-label\" htmlFor=\"inlineCheckbox3\">Rimless</label>\n          </div>\n        </div>\n        <div style={{float:'right'}}>Frame Shape\n          <div className=\"form-check \">\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox4\" onClick={event => setSqr('&frameShape=square')} />\n            <label className=\"form-check-label\" htmlFor=\"inlineCheckbox4\">Square</label>\n          </div>\n          <div className=\"form-check \">\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox5\" onClick={event => setRect('&frameShape=rectangle')} />\n            <label className=\"form-check-label\" htmlFor=\"inlineCheckbox5\" >Rectangle</label>\n          </div>\n          <div className=\"form-check \">\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox6\" onClick={event => setRound('&frameShape=round')} />\n            <label className=\"form-check-label\" htmlFor=\"inlineCheckbox6\">Rounded</label>\n          </div>\n          <div className=\"form-check \">\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox7\" onClick={event => setCat('&frameShape=cat eye')} />\n            <label className=\"form-check-label\" htmlFor=\"inlineCheckbox7\">Cat eye</label>\n          </div>\n        </div>\n\n        <center><button onSubmit={handelSubmit} type=\"Submit\" className=\"btn btn-primary my-3 px-5 py-2\" > Show</button> {state}</center>\n      </form>\n\n      <div className = \"d-flex justify-content-around flex-wrap\" >\n            {Data.map((val, index) => { console.log(val);\n              return (\n                <Card\n                  available={val.available}\n                  image={val.image}\n                  brand={val.brand}\n                  frameShape = {val.frameShape}\n                  frameType = {val.frameType}\n                  bought = {val.bought}\n                  wishlisted = {val.wishlisted}\n                  rating={val.rating}\n                  addedOn={val.addedOn}\n                  gender={val.gender}\n                  color={val.color}\n                  width={val.width}\n                  saving={val._saving}\n                  newPrice={val.newPrice}\n                  oldPrice={val.oldPrice}\n                  key={index}\n                />\n              );\n            })}\n      </div> \n    </div>\n    )\n}\n\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}